Python 3.10.4 (tags/v3.10.4:9d38120, Mar 23 2022, 23:13:41) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> odd=[1,3,5,7,9]
>>> a=[]
>>> b= [1,2,3]
>>> c=['Life', 'is', 'too', 'short']
>>> d = [1, 2, 'Life', 'is']
>>> e = [1,2,['Life', 'is']]
>>> a= [1,2,3]
>>> a
[1, 2, 3]
>>> a[0]
1
>>> a[0] + a[2]
4
>>> a[-1]
3
>>> a= [1,2,3,['a','b','c']]
>>> a[0]
1
>>> a[-1]
['a', 'b', 'c']
>>> a[3]
['a', 'b', 'c']
>>> a[-1][0]
'a'
>>> a[-1][1]
'b'
>>> a[-1][2]
'c'
>>> a= [1,2,['a','b',['Life','is']]
... a[-1][-1][0]
  File "<stdin>", line 1
    a= [1,2,['a','b',['Life','is']]
            ^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?
>>> a[2][2][0]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'int' object is not subscriptable
>>> a=[1,2,3,4,5]
>>> a[0:2]
[1, 2]
>>> a="12345"
>>> a[0:2]
'12'
>>> a=[1,2,3,4,5]
>>> b=a[:2]
>>> c=a[2:]
>>> b
[1, 2]
>>> c
[3, 4, 5]
>>> a = [1,2,3,['a','b','c'],4,5]
>>> a[2:5]
[3, ['a', 'b', 'c'], 4]
>>> a[3][:2]
['a', 'b']
>>> a=[1,2,3]
>>> b=[4,5,6]
>>> a+b
[1, 2, 3, 4, 5, 6]
>>> a*3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
>>> len(a)
3
>>> str(a[2])+"hi"
'3hi'
>>> a[2]=4
>>> a
[1, 2, 4]
>>> del a[1]
>>> a
[1, 4]
>>> a=[1,2,3,4,5]
>>> del a[2:]
>>> a
[1, 2]
>>> a=[1,2,3]
>>> a.append(4)
>>> a
[1, 2, 3, 4]
>>> a.append([5,6])
>>> a
[1, 2, 3, 4, [5, 6]]
>>> a=[1,4,3,2]
>>> a.sort()
>>> a
[1, 2, 3, 4]
>>> a=['a','c','b']
>>> a.sort()
>>> a
['a', 'b', 'c']
>>> a=['a','c','b']
>>> a.reverse()
>>> a
['b', 'c', 'a']
>>> a=[1,2,3]
>>> a.index(3)
2
>>> a.index(1)
0
>>> a.index(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 0 is not in list
>>> a=[1,2,3]
>>> a.insert(0,4)
>>> a
[4, 1, 2, 3]
>>> a.insert(3,5)
>>> a
[4, 1, 2, 5, 3]
>>> a=[1,2,3,1,2,3]
>>> a.remove(3)
>>> a
[1, 2, 1, 2, 3]
>>> a.remove(3)
>>> a
[1, 2, 1, 2]
>>> a=[1,2,3]
>>> a.pop()
3
>>> a
[1, 2]
>>> a=[1,2,3]
>>> a.pop(1)
2
>>> a
[1, 3]
>>> a=[1,2,3,1]
>>> a.count(1)
2
>>> a=[1,2,3]
>>> a.extend([4,5])
>>> a
[1, 2, 3, 4, 5]
>>> b=[6,7]
>>> a.extend(b)
>>> a
[1, 2, 3, 4, 5, 6, 7]
>>>
